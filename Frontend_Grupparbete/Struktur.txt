Struktur:
	• MVC.
	• SQL Databas. (användare + MixitUp data)
	• Boottsrap.
	• En Controller för varje sida.
	• En Layoutsida med toppmeny.
	• En inlogningssida i Angular.
	
	• Väder : Elin.
	Vädret är uppdelat i fyra delar, vädret just nu, vädret dag för dag i en vecka framåt, 
vädret timme för timme i två dygn framåt, och en graf som visar temperatur och nederbörd två dygn framåt. 
För att hämta väder-information så använder jag mig av API:et  https://api.forecast.io/forecast/. 
Jag använder sedan ajax, och mvc för att rendera partial-views för de olika väder-vyerna, 
utifrån den json-data man får från API:et. 
I vyerna använder jag mig av weather-icons font (https://erikflowers.github.io/weather-icons/ ) och bootstrap-tooltips.
Responsivitet hanteras med hjälp av bootstrap och media-queries.
Grafen är gjorde med hjälp av http://www.flotcharts.org/ plugin.
Jag använder HTML5 geolocation API för att hämta användarens plats när man först går in på väder-sidan.
För att söka på en plats så används google maps API.
Väder sökningar lagras i en timme i localstorage, baserat på longitude och latitude, detta för att minska belastningen på väder API:et.


	• Klocka: Lena.
	På klocksidan har jag använt mig av flera olika plugin för olika funktioner. 
	CoolClock http://randomibis.com/coolclock/coolclock.js tillsammans med moreskins http://randomibis.com/coolclock/moreskins.js för de analoga klockorna. 
	Moment http://momentjs.com/ för uträkning av tiden just nu och antal dagar kvar detta år. 
	Runner   https://plugins.jquery.com/runner/   för tidtagaren, där har jag använt tre metoder runnerStart, runnerStop och runnerReset. 

	• DataTable : Fredrik.
	Hämtar users ur databasen 
	https://cdn.datatables.net/r/dt/jq-2.1.4,dt-1.10.9,b-1.0.3,b-colvis-1.0.3,r-1.0.7,se-1.0.1/datatables.min.css
	https://cdn.datatables.net/r/dt/jq-2.1.4,dt-1.10.9,b-1.0.3,b-colvis-1.0.3,r-1.0.7,se-1.0.1/datatables.min.js
	I viewen används Razor för modelbinding och populeras med hjälp av en foreach loop. 
	Datatable appliceras via jQuery till html skapad av modelbindningen. Datatablen får sin design från bootstraps css klasser och är responsiv.
	Datatablen visar kolumner efter skärmstorlek och visa t.ex. i en enda kolumn vid minsta skärmbredd. Då kan man klicka på respektive
	cell för att få fram informationen från andra kolumner.



	• MixitUp : Stefan.
	Här har jag använt en plugin som heter MixItUp för att kunna sortera våran databas med användare på ett snyggt och enkelt sätt. Har använt mig av MVC och razor för att binda modelen (användarna) till vyn.
	Jag använde mig av modal klassen för att skapa små fina flytande containers för alla användare i databasen. 
	Sen har jag lagt till funktion för att kunna filtrera och sortera på olika värden. 
	Vid klick på en användare så popar det upp en Edit modal som är skriven i Angular. 
	https://mixitup.kunkalabs.com/ 


	• AnvändarRegistrering/Editering och Login : Stefan + Elin.
	Vi valde att jobba på varsin del av denna funktionalitet. Stefan gjorde Registrering och Editerings delen och Elin gjorde Login. 
	Vi valde att använda os av AngularJs samt Ui-Bootstrap för att pressentera dessa i Modal popups. Samt MVC och EntityFramework/SQL för att hantera allt på serversidan.
